x-deploy: &default-deploy
  restart_policy:
    condition: unless-stopped
    delay: 5s
    window: 120s
  update_config:
    order: start-first

version: "3.7"

services:

  firezone:
    image: l4rm4nd/firezone:latest
    container_name: firezone-web
    ports:
      - 51820:51820/udp
      - 127.0.0.1:13000:13000/tcp
    expose:
      - 13000 # mgmt admin ui
      - 51820 # wireguard
    env_file:
      - ${FZ_INSTALL_DIR:-.}/.env
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/firezone/data:/var/firezone
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      # Needed for masquerading and NAT.
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
    depends_on:
      - postgres
    #networks:
    #  - proxy
    #  - internal-firezone
    #labels:
    # - traefik.enable=true
    # - traefik.docker.network=proxy
    # - traefik.http.routers.firezone_https.rule=Host(`firezone.example.com`)
    # - traefik.http.routers.firezone_https.tls=true
    # - traefik.http.services.firezone.loadbalancer.server.port=13000
    # #- traefik.http.routers.firezone.middlewares=local-ipwhitelist@file

    deploy:
      <<: *default-deploy

  postgres:
    image: postgres:15-alpine
    container_name: firezone-db
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/firezone/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-firezone}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:?err}
    deploy:
      <<: *default-deploy
      update_config:
        order: stop-first
    #networks:
    #  - internal-firezone        

#networks:
#  proxy:
#    external: true
#  internal-firezone:
#    internal: true  
